*----------------------------------------
SUBROUTINE AMR.A.TRIGGER.EVENT
*----------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.AMR.SMS.SUBS
*    $INSERT I_F.AMR.H.INTF.PARAM

    GOSUB PROCESS
RETURN

*------------------
PROCESS:
*------------------

*    FN.AMR.INTF.PARAM = 'F.AMR.H.INTF.PARAM'
*    Y.AMR.INTF.PARAM = 'SMS'
    
*    CALL CACHE.READ(FN.AMR.INTF.PARAM,Y.AMR.INTF.PARAM,R.AMR.INTF.PARAM,E.AMR.INTF.PARAM)

    MATBUILD Y.BEFORE.IMG.REC FROM R.OLD
    MATBUILD Y.AFTER.IMG.REC FROM R.NEW

    Y.SMS.SUBS.IND.OLD = Y.BEFORE.IMG.REC<AMR.SMS.YES.INDICATOR>:Y.BEFORE.IMG.REC<AMR.SMS.NO.INDICATOR>
    Y.SMS.SUBS.IND.NEW = Y.AFTER.IMG.REC<AMR.SMS.YES.INDICATOR>:Y.AFTER.IMG.REC<AMR.SMS.NO.INDICATOR>
    
    IF Y.SMS.SUBS.IND.OLD NE Y.SMS.SUBS.IND.NEW AND Y.SMS.SUBS.IND.NEW NE '12' THEN
        GOSUB PROCESS.RAISE.ALERT
    END

RETURN

*--------------------------
PROCESS.RAISE.ALERT:
*--------------------------

    Y.SMS.SUBS.IND = Y.AFTER.IMG.REC<AMR.SMS.SMS.SUBS.INDICATOR>

    IF Y.SMS.SUBS.IND EQ 'YES' THEN
        EVENT.TYPE = 'AMR.SUBSCRIBE'
    END ELSE
        EVENT.TYPE = 'AMR.UNSUBSCRIBE'
    END

*    Y.POS = LEN(Y.SMS.SUBS.IND)-1

    SUBSCRIPTION.ID = ID.NEW
    Y.APPLICATION = APPLICATION
    
*    EVENT.TYPE = R.AMR.INTF.PARAM<AIP.FIELD.NAME,Y.POS> ; * ID OF EB.EVENT.TYPE record

    DIM LINKED.VALUE(8)
    MAT LINKED.VALUE = ''
    LINKED.VALUE(1) = Y.AFTER.IMG.REC
    PUBLISH.OR.HOLD = ''
    LOG.KEY = ''
    RESERVED1 = ''

    CALL TEC.RECORD.EVENT(EVENT.TYPE,SUBSCRIPTION.ID,Y.BEFORE.IMG.REC,Y.AFTER.IMG.REC,MAT LINKED.VALUE,PUBLISH.OR.HOLD,LOG.KEY, RESERVED1)

RETURN

END
